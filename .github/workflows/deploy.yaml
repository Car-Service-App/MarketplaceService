name: CI/CD pipelines

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Images

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build Car Parts Service with Maven
        run: mvn package -Pprod -Dmaven.test.skip=true --file pom.xml

      - name: Push Docker Image for Car Parts Service
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: Dockerfile
          tags: zmamz/marketplace-service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Stop containers
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker stop marketplace-service || true
            docker rm marketplace-service || true
            docker rmi zmamz/marketplace-service || true

      - name: Deploy Car Parts Service
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker pull zmamz/marketplace-service:latest
            docker run -d --name marketplace-service -p 8081:8081 \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -e REMOTE_SERVER_HOST=${{ secrets.REMOTE_SERVER_HOST }} \
            zmamz/marketplace-service:latest